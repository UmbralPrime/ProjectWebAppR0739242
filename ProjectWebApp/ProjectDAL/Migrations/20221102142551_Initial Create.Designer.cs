// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectDAL;

#nullable disable

namespace ProjectDAL.Migrations
{
    [DbContext(typeof(ProjectDBContext))]
    [Migration("20221102142551_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectModels.Activiteit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activiteiten");
                });

            modelBuilder.Entity("ProjectModels.ActiviteitGroep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActiviteitId")
                        .HasColumnType("int");

                    b.Property<int>("GroepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActiviteitId");

                    b.HasIndex("GroepId");

                    b.ToTable("ActiviteitGroepen");
                });

            modelBuilder.Entity("ProjectModels.Afbeelding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("linkAfbeelding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Afbeeldingen");
                });

            modelBuilder.Entity("ProjectModels.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActiviteitGroepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActiviteitGroepId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("ProjectModels.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("ProjectModels.Artikel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inhoud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artikels");
                });

            modelBuilder.Entity("ProjectModels.ArtikelGroep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtikelId")
                        .HasColumnType("int");

                    b.Property<int>("GroepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtikelId");

                    b.HasIndex("GroepId");

                    b.ToTable("ArtikelGroeps");
                });

            modelBuilder.Entity("ProjectModels.Groep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groepen");
                });

            modelBuilder.Entity("ProjectModels.Lid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Betaald")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOuder")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefoon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leden");
                });

            modelBuilder.Entity("ProjectModels.LidGroep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroepId")
                        .HasColumnType("int");

                    b.Property<int>("LidId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroepId");

                    b.HasIndex("LidId");

                    b.ToTable("LidGroeps");
                });

            modelBuilder.Entity("ProjectModels.ActiviteitGroep", b =>
                {
                    b.HasOne("ProjectModels.Activiteit", "Activiteit")
                        .WithMany()
                        .HasForeignKey("ActiviteitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectModels.Groep", "Groep")
                        .WithMany()
                        .HasForeignKey("GroepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activiteit");

                    b.Navigation("Groep");
                });

            modelBuilder.Entity("ProjectModels.Afbeelding", b =>
                {
                    b.HasOne("ProjectModels.Album", "Album")
                        .WithMany("Afbeeldingen")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("ProjectModels.Agenda", b =>
                {
                    b.HasOne("ProjectModels.ActiviteitGroep", "ActiviteitGroep")
                        .WithMany()
                        .HasForeignKey("ActiviteitGroepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiviteitGroep");
                });

            modelBuilder.Entity("ProjectModels.ArtikelGroep", b =>
                {
                    b.HasOne("ProjectModels.Artikel", "Artikel")
                        .WithMany()
                        .HasForeignKey("ArtikelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectModels.Groep", "Groep")
                        .WithMany()
                        .HasForeignKey("GroepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikel");

                    b.Navigation("Groep");
                });

            modelBuilder.Entity("ProjectModels.LidGroep", b =>
                {
                    b.HasOne("ProjectModels.Groep", "Groep")
                        .WithMany()
                        .HasForeignKey("GroepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectModels.Lid", "Lid")
                        .WithMany()
                        .HasForeignKey("LidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groep");

                    b.Navigation("Lid");
                });

            modelBuilder.Entity("ProjectModels.Album", b =>
                {
                    b.Navigation("Afbeeldingen");
                });
#pragma warning restore 612, 618
        }
    }
}
